---
title: "Class 10: Structural Bioinformatics Pt. 1"
author: "Amanda Wilpitz | A17463962"
format: pdf
toc: true
---

## 1. The PDB database

The main repository of biomolecular structure data is called the PDB found at: https://www.rcsb.org. 

Let's see what this database contains. I went to PDB > Analyze > PDB Statistics > By Exp Method and Molecular Type 

```{r}
pdbstats <- read.csv("Data Export Summary.csv")

pdbstats
```

> Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

```{r}
pdbstats$X.ray
```

The comma in these numbers is causing them to be read as characters rather than numeric.

Have two options: use a function to fix this or another way to read the file where it fixes itself.

I can fix this by using a replacing "," for nothing with the `sub()` function.

```{r}
x <- pdbstats$X.ray
sum(as.numeric(sub(",", "", x)))
```
Or I can use the **readr** package and the `read_csv()` function

```{r}
library(readr)

pdbstats <- read_csv("Data Export Summary.csv")

pdbstats
```

I want to clean the column names so they are all lowercase and don't have spaces in them.

```{r}
colnames(pdbstats)
```
```{r}
library(janitor)

df <- clean_names(pdbstats)

df
```

Total number of X-Ray structures:
```{r}
sum(df$x_ray)
```
Total number of structures:
```{r}
sum(df$total)
```
Percentage of structures solved by X-Ray:
```{r}
sum(df$x_ray)/sum(df$total) * 100
```

Percentage of structures solved by Electron Microscopy:
```{r}
sum(df$em)/sum(df$total) * 100
```

> Q2: What proportion of structures in the PDB are protein?

```{r}
#Structures that are protein
df[1, "total"]

#Total structures
sum(df$total)
```

```{r}
sum(df[1, "total"])/sum(df$total)
```

## 2. Using Mol*

The main Mol* homepage at: https://molstar.org/viewer/

We can input our own PDB files or just give it a PDB database accession code (4 letter PDB code)

![Molecular View of 1HSG](1HSG.png)

![Molecular Surface of IHSG](1HSG-2.png)

> Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

We only see one atom per water molecule in this structure because it's a simplified view and water is represented with only one atom in order to be able to view the target molecule better.  

> Q5: There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have?

![Water 308 in the Binding Site](1HSG-1.png)

> Q6: Generate and save a figure clearly showing the two distinct chains of HIV-protease along with the ligand. You might also consider showing the catalytic residues ASP 25 in each chain and the critical water (we recommend “Ball & Stick” for these side-chains). Add this figure to your Quarto document.

![The important ASP25 Amino Acids](1HSG-3.png)

## 3. Introduction to Bio3D in R

We can use the **bio3d** package for structural bioinformatics to read PDB data into R. 
```{r}
library(bio3d)
pdb <- read.pdb("1hsg")
pdb
```
MK1: ligand 

> Q7: How many amino acid residues are there in this pdb object? 

```{r}
length(pdbseq(pdb))
```
> Q8: Name one of the two non-protein residues? 

MK1

> Q9: How many protein chains are in this structure?

2 chains: A and B

Looking at the `pdb` object in more detail:

```{r}
attributes(pdb)
```
```{r}
head(pdb$atom)
```

Let's try a new function not yet in the bio3d package. It requires the **r3dmol** package that we need to install with `install.packages("r3dmol")` and `install.packages("shiny")`.
```{r}
#source("https://tinyurl.com/viewpdb")
#view.pdb(pdb, backgroundColor = "grey")
```

## 4. Predicting Functional Dynamics

We can use the `nma()` function in bio3d to predict the large-scale functional motions of biomolecules.

```{r}
adk <- read.pdb("6s36")
adk
```

```{r}
m <- nma(adk)
plot(m)
```

Write out a trajectory of the predicted molecular motion: 
```{r}
#mktrj = Make Trajectory
mktrj(m, file="adk_m7.pdb")
```

Can use this file to play as an animation in Mol*. 

